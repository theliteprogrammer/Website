# Generated by Django 4.2.4 on 2023-08-24 08:23

import datetime
from django.db import migrations, models
import django.db.models.deletion
import django_ckeditor_5.fields
import shortuuid.django_fields


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='AboutUS',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('image', models.FileField(blank=True, default='logo.jpg', null=True, upload_to='')),
                ('title', models.CharField(blank=True, default='Global Leading Online Shop', max_length=1000, null=True)),
                ('content', django_ckeditor_5.fields.CKEditor5Field(blank=True, null=True)),
            ],
            options={
                'verbose_name': 'About Us',
                'verbose_name_plural': 'About Us',
            },
        ),
        migrations.CreateModel(
            name='AnalyticsTrackingCode',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name_of_analytics', models.CharField(help_text='Enter the name of analytics. E.g: Google Analytics', max_length=1000)),
                ('head_tag', models.TextField(blank=True, help_text='Any code pasted here would be added in the head tag. NOTE: Include the scripts or link tags', null=True)),
                ('body_tag', models.TextField(blank=True, help_text='Codes pasted here would be added in the body tag. NOTE: Include the script or links or element tags', null=True)),
                ('active', models.BooleanField(default=True)),
                ('date', models.DateTimeField(blank=True, default=datetime.datetime.now, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='AnnouncementsModal',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=1000)),
                ('announcement', django_ckeditor_5.fields.CKEditor5Field()),
                ('link_text', models.CharField(blank=True, max_length=100, null=True)),
                ('link_url', models.URLField(blank=True, null=True)),
                ('show_link', models.BooleanField(default=False)),
                ('active', models.BooleanField(default=False)),
                ('entrance_delay', models.PositiveIntegerField(default=10, help_text="The numbers added here are in 'mili-seconds'")),
                ('version', models.CharField(editable=False, help_text='NOTICE: Do not modify the version field', max_length=10000)),
            ],
            options={
                'verbose_name': 'Announcement Modal',
                'verbose_name_plural': 'Announcements Modal',
            },
        ),
        migrations.CreateModel(
            name='AnnouncementsTopbar',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('announcement', django_ckeditor_5.fields.CKEditor5Field()),
                ('link_text', models.CharField(blank=True, max_length=100, null=True)),
                ('link_url', models.URLField(blank=True, null=True)),
                ('show_link', models.BooleanField(default=False)),
                ('alert_bg', models.CharField(blank=True, help_text='Options are: alert-success, alert-danger, alert-warning, alert-primary, alert-dark & animate-grad for gradient alert', max_length=100, null=True)),
                ('active', models.BooleanField(default=False)),
                ('version', models.CharField(editable=False, help_text='NOTICE: Do not modify the version field', max_length=10000)),
            ],
            options={
                'verbose_name': 'Announcement Topbar',
                'verbose_name_plural': 'Announcements Topbar',
            },
        ),
        migrations.CreateModel(
            name='BasicAddon',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('view_more', models.CharField(default='View All', max_length=10)),
                ('service_fee_percentage', models.IntegerField(default=5, help_text='NOTE: Numbers added here are in percentage (%)ve.g 4%')),
                ('service_fee_flat_rate', models.DecimalField(decimal_places=2, default=0.7, help_text='NOTE: Add the amount you want to charge as service fee e.g $2.30', max_digits=12)),
                ('service_fee_charge_type', models.CharField(choices=[('percentage', 'Percentage'), ('flat_rate', 'Flat Rate')], default='percentage', max_length=30)),
                ('affiliate_commission_percentage', models.IntegerField(default=50, help_text='NOTE: Numbers added here are in percentage (%)')),
                ('general_tax_percentage', models.IntegerField(default=5, help_text='NOTE: Numbers added here are in percentage (%)')),
                ('vendor_fee_percentage', models.IntegerField(default=5, help_text='NOTE: Numbers added here are in percentage (%)')),
                ('currency_sign', models.CharField(default='$', max_length=10)),
                ('currency_abbreviation', models.CharField(default='USD', max_length=10)),
                ('registration_form_type', models.CharField(choices=[('classic', 'Classic'), ('dynamic', 'Dynamic')], default='classic', max_length=50)),
                ('send_email_notifications', models.BooleanField(default=False)),
                ('payout_vendor_fee_immediately', models.BooleanField(default=True)),
                ('review_type', models.CharField(choices=[('any_authenticated_user', 'Allow any user that is logged in to review a product'), ('only_purchased_user', 'Allow only users who have purchased a product to review the product')], default='any_authenticated_user', max_length=130)),
                ('header_type', models.CharField(choices=[('1', 'Header 1'), ('2', 'Header 2')], default='1', max_length=130)),
                ('account_creation_type', models.CharField(choices=[('create_account', 'Create Account Automatically Before Checkout'), ('dont_create_account', 'Do Not Create Account Before Checkout')], default='create_account', max_length=130)),
                ('image_upload_limit', models.IntegerField(default=10)),
            ],
            options={
                'verbose_name': 'Settings',
                'verbose_name_plural': 'Settings',
            },
        ),
        migrations.CreateModel(
            name='ChangeLog',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=1000)),
                ('announcement', django_ckeditor_5.fields.CKEditor5Field()),
                ('active', models.BooleanField(default=False)),
                ('date', models.DateTimeField(blank=True, help_text='*Optional: Add the date when the update became live', null=True)),
            ],
            options={
                'verbose_name': 'Change Log',
                'verbose_name_plural': 'Change Log',
            },
        ),
        migrations.CreateModel(
            name='Company',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('logo', models.FileField(default='logo.jpg', upload_to='')),
                ('logo_type', models.CharField(choices=[('use_image', 'Use Company Image'), ('use_name', 'Use Company Name'), ('use_landscape', 'Use Landscape Image')], default='use_image', max_length=30)),
                ('name', models.CharField(max_length=200)),
                ('email', models.CharField(max_length=200)),
                ('phone', models.CharField(max_length=200)),
                ('website_address', models.CharField(help_text='Add the website address without the slash /', max_length=500)),
                ('admin_website_address', models.CharField(help_text='Add the admin address without the slash /', max_length=500)),
                ('footer', models.CharField(max_length=1000)),
                ('facebook', models.CharField(default='https://facebook.com/', max_length=1000)),
                ('instagram', models.CharField(default='https://instagram.com/', max_length=1000)),
                ('twitter', models.CharField(default='https://twitter.com/', max_length=1000)),
                ('linkedin', models.CharField(default='https://linkedin.com/', max_length=1000)),
                ('youtube', models.CharField(default='https://youtube.com/', max_length=1000)),
                ('telegram', models.CharField(default='https://telegram.com/', max_length=1000)),
                ('homepage', models.CharField(choices=[('live', 'Live'), ('maintainance', 'Maintainance'), ('error', 'Error')], default='live', max_length=1000)),
                ('secret_key', models.CharField(blank=True, max_length=1000, null=True)),
                ('public_key', models.CharField(blank=True, max_length=1000, null=True)),
            ],
            options={
                'verbose_name_plural': 'Company Information',
            },
        ),
        migrations.CreateModel(
            name='ContactUs',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('cid', shortuuid.django_fields.ShortUUIDField(alphabet='abcdefghijklnopqstuv', length=20, max_length=25, prefix='')),
                ('topic', models.CharField(choices=[('talk_to_an_agent ', 'Talk To An Agent '), ('complaint', 'Complaint'), ('report_product', 'Report Product'), ('report_vendor', 'Report Vendor'), ('new_feature_idea', 'New Feature Idea'), ('report_a_bug', 'Report a Bug')], default='talk_to_an_agent', max_length=50)),
                ('full_name', models.CharField(max_length=300)),
                ('email', models.EmailField(max_length=254)),
                ('subject', models.CharField(max_length=300)),
                ('message', models.TextField()),
                ('resolved', models.BooleanField(default=False)),
                ('date', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'verbose_name_plural': 'Contact Us ',
            },
        ),
        migrations.CreateModel(
            name='EarningPoints',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('signup_point', models.IntegerField(default=10)),
                ('enable_signup_point', models.BooleanField(default=True)),
                ('text', models.CharField(default='Point', max_length=10)),
                ('referral_point', models.PositiveIntegerField(default=500, help_text='Enter an amount that user will get when they refer thier friend')),
            ],
            options={
                'verbose_name_plural': 'Earning Points',
            },
        ),
        migrations.CreateModel(
            name='FAQs',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('fid', shortuuid.django_fields.ShortUUIDField(alphabet='abcdefghijklnopqstuv', length=20, max_length=25, prefix='')),
                ('question', models.CharField(max_length=100)),
                ('answer', models.TextField(blank=True, null=True)),
                ('share', models.BooleanField(default=False)),
                ('email', models.CharField(blank=True, max_length=200, null=True)),
            ],
            options={
                'verbose_name': 'FAQs',
                'verbose_name_plural': 'FAQs',
            },
        ),
        migrations.CreateModel(
            name='HomePageSetup',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(default='Home Page Setup', max_length=50)),
                ('homepage_type', models.CharField(choices=[('1', 'Homepage 1'), ('2', 'Homepage 2'), ('3', 'Homepage 3'), ('4', 'Homepage 4')], default='1', max_length=50)),
            ],
            options={
                'verbose_name_plural': 'Home Page Setup',
            },
        ),
        migrations.CreateModel(
            name='NewsLetter',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('email', models.EmailField(max_length=254)),
                ('active', models.BooleanField(blank=True, default=True, null=True)),
                ('date', models.DateTimeField(blank=True, default=datetime.datetime.now, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='PaymentMethod',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('active', models.BooleanField(default=True)),
                ('date', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'verbose_name': 'Payment Method',
                'verbose_name_plural': 'Payment Method',
                'ordering': ['-date'],
            },
        ),
        migrations.CreateModel(
            name='PayoutMethod',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('active', models.BooleanField(default=True)),
                ('date', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'verbose_name': 'Payout Method',
                'verbose_name_plural': 'Payout Method',
                'ordering': ['-date'],
            },
        ),
        migrations.CreateModel(
            name='PlatformNotifications',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('image', models.FileField(blank=True, null=True, upload_to='notifications')),
                ('title', models.CharField(max_length=1000)),
                ('content', django_ckeditor_5.fields.CKEditor5Field(blank=True, null=True)),
                ('active', models.BooleanField(default=True)),
                ('date', models.DateTimeField(auto_now_add=True)),
                ('nid', shortuuid.django_fields.ShortUUIDField(alphabet='abcdefghijklnopqstuv', length=20, max_length=25, prefix='')),
            ],
            options={
                'verbose_name': 'Platform Update Notifications',
                'verbose_name_plural': 'Platform Update Notifications',
                'ordering': ['date'],
            },
        ),
        migrations.CreateModel(
            name='Policy',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('terms_and_conditions', django_ckeditor_5.fields.CKEditor5Field(blank=True, null=True)),
                ('return_policy', django_ckeditor_5.fields.CKEditor5Field(blank=True, null=True)),
                ('privacy_policy', django_ckeditor_5.fields.CKEditor5Field(blank=True, null=True)),
                ('cookie_policy', django_ckeditor_5.fields.CKEditor5Field(blank=True, null=True)),
            ],
            options={
                'verbose_name': 'Policy',
                'verbose_name_plural': 'Policy',
            },
        ),
        migrations.CreateModel(
            name='SuperUserSignUpPin',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('pin', models.CharField(default='17880984243324543', max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='SupportContactInformation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('email', models.CharField(max_length=200)),
                ('phone', models.CharField(max_length=200)),
                ('address', models.CharField(blank=True, max_length=1000, null=True)),
                ('working_days', models.CharField(blank=True, default='Monday - Friday', max_length=1000, null=True)),
                ('open_time', models.CharField(blank=True, default='08 AM', max_length=100, null=True)),
                ('closing_time', models.CharField(blank=True, default='05 PM', max_length=100, null=True)),
            ],
            options={
                'verbose_name_plural': 'Support Contact Information',
            },
        ),
        migrations.CreateModel(
            name='TaxRate',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('country', models.CharField(max_length=200)),
                ('rate', models.IntegerField(default=5, help_text='Numbers added here are in percentage (5 = 5%)')),
                ('active', models.BooleanField(default=True)),
                ('custom_name', models.CharField(blank=True, default='Tax', max_length=100, null=True)),
                ('date', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'verbose_name_plural': 'Tax Rates',
            },
        ),
        migrations.CreateModel(
            name='TutorialVideo',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(default='Video Links', max_length=100)),
                ('how_to_use_platform', models.URLField(blank=True, default='https://youtube.com', null=True)),
                ('how_to_use_affiliate_system', models.URLField(blank=True, default='https://youtube.com', null=True)),
                ('how_to_become_a_vendor', models.URLField(blank=True, default='https://youtube.com', null=True)),
            ],
            options={
                'verbose_name': 'Tutorial Video',
                'verbose_name_plural': 'Tutorial Video',
            },
        ),
        migrations.CreateModel(
            name='UnitTypes',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('active', models.BooleanField(default=True)),
                ('date', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'verbose_name': 'Unit Types',
                'verbose_name_plural': 'Unit Types',
                'ordering': ['-date'],
            },
        ),
        migrations.CreateModel(
            name='Team',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('image', models.FileField(blank=True, default='logo.jpg', null=True, upload_to='')),
                ('full_name', models.CharField(max_length=1000)),
                ('role', models.CharField(blank=True, max_length=1000, null=True)),
                ('active', models.BooleanField(default=True)),
                ('about_us', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='addon.aboutus')),
            ],
            options={
                'verbose_name': 'Team',
                'verbose_name_plural': 'Team',
            },
        ),
        migrations.CreateModel(
            name='Partner',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('logo', models.FileField(blank=True, default='logo.jpg', null=True, upload_to='')),
                ('company_name', models.CharField(max_length=1000)),
                ('active', models.BooleanField(default=True)),
                ('about_us', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='addon.aboutus')),
            ],
            options={
                'verbose_name': 'Partner',
                'verbose_name_plural': 'Partner',
            },
        ),
        migrations.CreateModel(
            name='NewsLetterText',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(blank=True, default='Subscrible & Get 10% Discount', max_length=1000, null=True)),
                ('sub_title', models.CharField(blank=True, default='Get E-mail updates about our latest shop and special offers.', max_length=1000, null=True)),
                ('image', models.FileField(blank=True, default='logo.jpg', null=True, upload_to='general_images')),
                ('active', models.BooleanField(default=False)),
                ('addon', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='addon.basicaddon')),
            ],
            options={
                'verbose_name': 'News Letter Write Up',
                'verbose_name_plural': 'News Letter Write Up',
            },
        ),
        migrations.CreateModel(
            name='Home_Two',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('image', models.FileField(blank=True, null=True, upload_to='homepage')),
                ('small_title', models.CharField(default='Hey there, Welcome!', max_length=1010)),
                ('main_title', models.CharField(default='Keep your new born baby engaged', max_length=1010)),
                ('sub_title', models.CharField(default='Lorem Ipsum is the best way of writing destiny car type', max_length=1010)),
                ('button_text', models.CharField(default='Shop Now', max_length=100)),
                ('button_url', models.URLField(default='https://recygo.com/shop/', max_length=1000)),
                ('active', models.BooleanField(default=True)),
                ('homepage', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='addon.homepagesetup')),
            ],
            options={
                'verbose_name_plural': 'Home Two',
            },
        ),
        migrations.CreateModel(
            name='Home_One_Sidebar',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('image', models.FileField(blank=True, null=True, upload_to='homepage')),
                ('small_text', models.CharField(default='Hey there, Welcome!', max_length=1010)),
                ('main_text', models.CharField(default='20% OFF Today', max_length=40)),
                ('description_text', models.CharField(default='Lorem Ipsum is the best way of writing destiny car type Lorem Ipsum is the best way of writing destiny car type', max_length=1010)),
                ('button_text', models.CharField(default='Shop Now', max_length=100)),
                ('button_url', models.URLField(default='https://recygo.com/shop/', max_length=1000)),
                ('background_color', models.CharField(default='bg-purple', help_text='Backgrounds: bg-purple, bg-red, bg-green, bg-orange, bg-gray', max_length=100)),
                ('active', models.BooleanField(default=True)),
                ('homepage', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='addon.homepagesetup')),
            ],
            options={
                'verbose_name_plural': 'Home One Sidebar',
            },
        ),
        migrations.CreateModel(
            name='Home_One',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('image', models.FileField(blank=True, null=True, upload_to='homepage')),
                ('small_text', models.CharField(default='Hey there, Welcome!', max_length=1010)),
                ('small_sub_text', models.CharField(default='Explore our hot collections  ', max_length=1010)),
                ('main_text', models.CharField(default='20% OFF Today', max_length=20)),
                ('description_text', models.CharField(default='Lorem Ipsum is the best way of writing destiny car type Lorem Ipsum is the best way of writing destiny car type', max_length=1010)),
                ('button_text', models.CharField(default='Shop Now', max_length=100)),
                ('button_url', models.URLField(default='https://recygo.com/shop/', max_length=1000)),
                ('background_color', models.CharField(default='bg-purple', help_text='Backgrounds: bg-purple, bg-red, bg-green, bg-orange, bg-gray', max_length=100)),
                ('first', models.BooleanField(default=False)),
                ('active', models.BooleanField(default=True)),
                ('homepage', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='addon.homepagesetup')),
            ],
            options={
                'verbose_name_plural': 'Home One',
            },
        ),
        migrations.CreateModel(
            name='FooterBenefits',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('image', models.FileField(upload_to='general_images')),
                ('title', models.CharField(blank=True, max_length=1000, null=True)),
                ('sub_title', models.CharField(blank=True, max_length=1000, null=True)),
                ('active', models.BooleanField(default=False)),
                ('addon', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='addon.basicaddon')),
            ],
            options={
                'verbose_name': 'Platform Benefits (Footer)',
                'verbose_name_plural': 'Platform Benefits (Footer)',
            },
        ),
        migrations.CreateModel(
            name='Feature',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(blank=True, default='Secured Payment and Fast Delivery', max_length=1000, null=True)),
                ('active', models.BooleanField(default=True)),
                ('about_us', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='addon.aboutus')),
            ],
            options={
                'verbose_name': 'Feature',
                'verbose_name_plural': 'Feature',
            },
        ),
        migrations.CreateModel(
            name='Customers',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('full_name', models.CharField(max_length=1000)),
                ('email', models.CharField(max_length=1000)),
                ('mobile', models.CharField(max_length=1000)),
                ('spent', models.DecimalField(decimal_places=2, default=0.0, max_digits=12)),
                ('cid', shortuuid.django_fields.ShortUUIDField(alphabet='abcdefghijklmnopqrstuvxyz', length=10, max_length=25, prefix='')),
                ('date', models.DateTimeField(auto_now_add=True)),
                ('country', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='addon.taxrate')),
            ],
            options={
                'verbose_name_plural': 'Customers',
                'ordering': ['-date'],
            },
        ),
        migrations.CreateModel(
            name='BecomeAVendor',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('image', models.FileField(blank=True, default='blank.jpg', null=True, upload_to='')),
                ('sub_title', models.CharField(blank=True, default='Become a Vendor', max_length=1000, null=True)),
                ('title', models.CharField(blank=True, default='Start Selling With Us Today', max_length=1000, null=True)),
                ('content', django_ckeditor_5.fields.CKEditor5Field(blank=True, null=True)),
                ('addon', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='addon.basicaddon')),
            ],
            options={
                'verbose_name': 'Become a Vendor',
                'verbose_name_plural': 'Become a Vendor',
            },
        ),
        migrations.AddField(
            model_name='basicaddon',
            name='payment_method',
            field=models.ManyToManyField(blank=True, to='addon.paymentmethod'),
        ),
        migrations.CreateModel(
            name='AffiliateLandingPage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('image', models.FileField(blank=True, default='blank.jpg', null=True, upload_to='')),
                ('sub_title', models.CharField(blank=True, default='Earn Commissions', max_length=1000, null=True)),
                ('title', models.CharField(blank=True, default='Partner with us to earn commissions.', max_length=1000, null=True)),
                ('content', django_ckeditor_5.fields.CKEditor5Field(blank=True, null=True)),
                ('addon', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='addon.basicaddon')),
            ],
            options={
                'verbose_name': 'Affiliate Landing Page',
                'verbose_name_plural': 'Affiliate Landing Page',
            },
        ),
    ]
